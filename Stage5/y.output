Terminals unused in grammar

   ASSIGN
   NEWLINE


Grammar

    0 $accept: strt $end

    1 strt: declaration Program

    2 declaration: DECL dclist ENDDECL

    3 dclist: decl dclist
    4       | %empty

    5 decl: INT varlist ';'
    6     | BOOL varlist ';'

    7 varlist: idDecl ',' varlist
    8        | idDecl

    9 idDecl: ID '[' NUM ']'
   10       | ID

   11 Program: BEGINM slist END

   12 slist: slist stmt
   13      | stmt

   14 expr: expr PLUS expr
   15     | expr MINUS expr
   16     | expr MUL expr
   17     | expr DIV expr
   18     | expr MODULO expr
   19     | expr EQ expr
   20     | expr LT expr
   21     | expr GT expr
   22     | expr LE expr
   23     | expr GE expr
   24     | expr NE expr
   25     | expr AND expr
   26     | expr OR expr
   27     | NOT expr
   28     | idexpr
   29     | NUM
   30     | BOOLCONS

   31 idexpr: ID '[' expr ']'
   32       | ID

   33 stmt: idexpr ASGN expr ';'
   34     | READ '(' idexpr ')' ';'
   35     | WRITE '(' expr ')' ';'
   36     | IF '(' expr ')' THEN slist ELSE slist ENDIF ';'
   37     | WHILE '(' expr ')' DO slist ENDWHILE ';'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 34 35 36 37
')' (41) 34 35 36 37
',' (44) 7
';' (59) 5 6 33 34 35 36 37
'[' (91) 9 31
']' (93) 9 31
error (256)
PLUS (258) 14
MINUS (259) 15
MUL (260) 16
DIV (261) 17
MODULO (262) 18
ASSIGN (263)
LT (264) 20
LE (265) 22
GT (266) 21
GE (267) 23
EQ (268) 19
NE (269) 24
AND (270) 25
OR (271) 26
NOT (272) 27
IF (273) 36
THEN (274) 36
ELSE (275) 36
ENDIF (276) 36
WHILE (277) 37
DO (278) 37
ENDWHILE (279) 37
ID (280) 9 10 31 32
NUM (281) 9 29
BOOLCONS (282) 30
READ (283) 34
WRITE (284) 35
ASGN (285) 33
NEWLINE (286)
BEGINM (287) 11
END (288) 11
INT (289) 5
BOOL (290) 6
DECL (291) 2
ENDDECL (292) 2


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
strt (45)
    on left: 1, on right: 0
declaration (46)
    on left: 2, on right: 1
dclist (47)
    on left: 3 4, on right: 2 3
decl (48)
    on left: 5 6, on right: 3
varlist (49)
    on left: 7 8, on right: 5 6 7
idDecl (50)
    on left: 9 10, on right: 7 8
Program (51)
    on left: 11, on right: 1
slist (52)
    on left: 12 13, on right: 11 12 36 37
expr (53)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30, on right:
    14 15 16 17 18 19 20 21 22 23 24 25 26 27 31 33 35 36 37
idexpr (54)
    on left: 31 32, on right: 28 33 34
stmt (55)
    on left: 33 34 35 36 37, on right: 12 13


State 0

    0 $accept: . strt $end

    DECL  shift, and go to state 1

    strt         go to state 2
    declaration  go to state 3


State 1

    2 declaration: DECL . dclist ENDDECL

    INT   shift, and go to state 4
    BOOL  shift, and go to state 5

    $default  reduce using rule 4 (dclist)

    dclist  go to state 6
    decl    go to state 7


State 2

    0 $accept: strt . $end

    $end  shift, and go to state 8


State 3

    1 strt: declaration . Program

    BEGINM  shift, and go to state 9

    Program  go to state 10


State 4

    5 decl: INT . varlist ';'

    ID  shift, and go to state 11

    varlist  go to state 12
    idDecl   go to state 13


State 5

    6 decl: BOOL . varlist ';'

    ID  shift, and go to state 11

    varlist  go to state 14
    idDecl   go to state 13


State 6

    2 declaration: DECL dclist . ENDDECL

    ENDDECL  shift, and go to state 15


State 7

    3 dclist: decl . dclist

    INT   shift, and go to state 4
    BOOL  shift, and go to state 5

    $default  reduce using rule 4 (dclist)

    dclist  go to state 16
    decl    go to state 7


State 8

    0 $accept: strt $end .

    $default  accept


State 9

   11 Program: BEGINM . slist END

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21

    slist   go to state 22
    idexpr  go to state 23
    stmt    go to state 24


State 10

    1 strt: declaration Program .

    $default  reduce using rule 1 (strt)


State 11

    9 idDecl: ID . '[' NUM ']'
   10       | ID .

    '['  shift, and go to state 25

    $default  reduce using rule 10 (idDecl)


State 12

    5 decl: INT varlist . ';'

    ';'  shift, and go to state 26


State 13

    7 varlist: idDecl . ',' varlist
    8        | idDecl .

    ','  shift, and go to state 27

    $default  reduce using rule 8 (varlist)


State 14

    6 decl: BOOL varlist . ';'

    ';'  shift, and go to state 28


State 15

    2 declaration: DECL dclist ENDDECL .

    $default  reduce using rule 2 (declaration)


State 16

    3 dclist: decl dclist .

    $default  reduce using rule 3 (dclist)


State 17

   36 stmt: IF . '(' expr ')' THEN slist ELSE slist ENDIF ';'

    '('  shift, and go to state 29


State 18

   37 stmt: WHILE . '(' expr ')' DO slist ENDWHILE ';'

    '('  shift, and go to state 30


State 19

   31 idexpr: ID . '[' expr ']'
   32       | ID .

    '['  shift, and go to state 31

    $default  reduce using rule 32 (idexpr)


State 20

   34 stmt: READ . '(' idexpr ')' ';'

    '('  shift, and go to state 32


State 21

   35 stmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 33


State 22

   11 Program: BEGINM slist . END
   12 slist: slist . stmt

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21
    END    shift, and go to state 34

    idexpr  go to state 23
    stmt    go to state 35


State 23

   33 stmt: idexpr . ASGN expr ';'

    ASGN  shift, and go to state 36


State 24

   13 slist: stmt .

    $default  reduce using rule 13 (slist)


State 25

    9 idDecl: ID '[' . NUM ']'

    NUM  shift, and go to state 37


State 26

    5 decl: INT varlist ';' .

    $default  reduce using rule 5 (decl)


State 27

    7 varlist: idDecl ',' . varlist

    ID  shift, and go to state 11

    varlist  go to state 38
    idDecl   go to state 13


State 28

    6 decl: BOOL varlist ';' .

    $default  reduce using rule 6 (decl)


State 29

   36 stmt: IF '(' . expr ')' THEN slist ELSE slist ENDIF ';'

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 42
    idexpr  go to state 43


State 30

   37 stmt: WHILE '(' . expr ')' DO slist ENDWHILE ';'

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 44
    idexpr  go to state 43


State 31

   31 idexpr: ID '[' . expr ']'

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 45
    idexpr  go to state 43


State 32

   34 stmt: READ '(' . idexpr ')' ';'

    ID  shift, and go to state 19

    idexpr  go to state 46


State 33

   35 stmt: WRITE '(' . expr ')' ';'

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 47
    idexpr  go to state 43


State 34

   11 Program: BEGINM slist END .

    $default  reduce using rule 11 (Program)


State 35

   12 slist: slist stmt .

    $default  reduce using rule 12 (slist)


State 36

   33 stmt: idexpr ASGN . expr ';'

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 48
    idexpr  go to state 43


State 37

    9 idDecl: ID '[' NUM . ']'

    ']'  shift, and go to state 49


State 38

    7 varlist: idDecl ',' varlist .

    $default  reduce using rule 7 (varlist)


State 39

   27 expr: NOT . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 50
    idexpr  go to state 43


State 40

   29 expr: NUM .

    $default  reduce using rule 29 (expr)


State 41

   30 expr: BOOLCONS .

    $default  reduce using rule 30 (expr)


State 42

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   36 stmt: IF '(' expr . ')' THEN slist ELSE slist ENDIF ';'

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    ')'     shift, and go to state 64


State 43

   28 expr: idexpr .

    $default  reduce using rule 28 (expr)


State 44

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   37 stmt: WHILE '(' expr . ')' DO slist ENDWHILE ';'

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    ')'     shift, and go to state 65


State 45

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   31 idexpr: ID '[' expr . ']'

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    ']'     shift, and go to state 66


State 46

   34 stmt: READ '(' idexpr . ')' ';'

    ')'  shift, and go to state 67


State 47

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   35 stmt: WRITE '(' expr . ')' ';'

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    ')'     shift, and go to state 68


State 48

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   33 stmt: idexpr ASGN expr . ';'

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    ';'     shift, and go to state 69


State 49

    9 idDecl: ID '[' NUM ']' .

    $default  reduce using rule 9 (idDecl)


State 50

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | NOT expr .

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61

    $default  reduce using rule 27 (expr)


State 51

   14 expr: expr PLUS . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 70
    idexpr  go to state 43


State 52

   15 expr: expr MINUS . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 71
    idexpr  go to state 43


State 53

   16 expr: expr MUL . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 72
    idexpr  go to state 43


State 54

   17 expr: expr DIV . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 73
    idexpr  go to state 43


State 55

   18 expr: expr MODULO . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 74
    idexpr  go to state 43


State 56

   20 expr: expr LT . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 75
    idexpr  go to state 43


State 57

   22 expr: expr LE . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 76
    idexpr  go to state 43


State 58

   21 expr: expr GT . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 77
    idexpr  go to state 43


State 59

   23 expr: expr GE . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 78
    idexpr  go to state 43


State 60

   19 expr: expr EQ . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 79
    idexpr  go to state 43


State 61

   24 expr: expr NE . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 80
    idexpr  go to state 43


State 62

   25 expr: expr AND . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 81
    idexpr  go to state 43


State 63

   26 expr: expr OR . expr

    NOT       shift, and go to state 39
    ID        shift, and go to state 19
    NUM       shift, and go to state 40
    BOOLCONS  shift, and go to state 41

    expr    go to state 82
    idexpr  go to state 43


State 64

   36 stmt: IF '(' expr ')' . THEN slist ELSE slist ENDIF ';'

    THEN  shift, and go to state 83


State 65

   37 stmt: WHILE '(' expr ')' . DO slist ENDWHILE ';'

    DO  shift, and go to state 84


State 66

   31 idexpr: ID '[' expr ']' .

    $default  reduce using rule 31 (idexpr)


State 67

   34 stmt: READ '(' idexpr ')' . ';'

    ';'  shift, and go to state 85


State 68

   35 stmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 86


State 69

   33 stmt: idexpr ASGN expr ';' .

    $default  reduce using rule 33 (stmt)


State 70

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55

    $default  reduce using rule 14 (expr)


State 71

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55

    $default  reduce using rule 15 (expr)


State 72

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   16     | expr MUL expr .
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 16 (expr)


State 73

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   17     | expr DIV expr .
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 74

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   18     | expr MODULO expr .
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 75

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   20     | expr LT expr .
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55

    $default  reduce using rule 20 (expr)


State 76

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   22     | expr LE expr .
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55

    $default  reduce using rule 22 (expr)


State 77

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   21     | expr GT expr .
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55

    $default  reduce using rule 21 (expr)


State 78

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   23     | expr GE expr .
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55

    $default  reduce using rule 23 (expr)


State 79

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   19     | expr EQ expr .
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55

    $default  reduce using rule 19 (expr)


State 80

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   24     | expr NE expr .
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55

    $default  reduce using rule 24 (expr)


State 81

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . OR expr

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61

    $default  reduce using rule 25 (expr)


State 82

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . EQ expr
   20     | expr . LT expr
   21     | expr . GT expr
   22     | expr . LE expr
   23     | expr . GE expr
   24     | expr . NE expr
   25     | expr . AND expr
   26     | expr . OR expr
   26     | expr OR expr .

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    MUL     shift, and go to state 53
    DIV     shift, and go to state 54
    MODULO  shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61

    $default  reduce using rule 26 (expr)


State 83

   36 stmt: IF '(' expr ')' THEN . slist ELSE slist ENDIF ';'

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21

    slist   go to state 87
    idexpr  go to state 23
    stmt    go to state 24


State 84

   37 stmt: WHILE '(' expr ')' DO . slist ENDWHILE ';'

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21

    slist   go to state 88
    idexpr  go to state 23
    stmt    go to state 24


State 85

   34 stmt: READ '(' idexpr ')' ';' .

    $default  reduce using rule 34 (stmt)


State 86

   35 stmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 35 (stmt)


State 87

   12 slist: slist . stmt
   36 stmt: IF '(' expr ')' THEN slist . ELSE slist ENDIF ';'

    IF     shift, and go to state 17
    ELSE   shift, and go to state 89
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21

    idexpr  go to state 23
    stmt    go to state 35


State 88

   12 slist: slist . stmt
   37 stmt: WHILE '(' expr ')' DO slist . ENDWHILE ';'

    IF        shift, and go to state 17
    WHILE     shift, and go to state 18
    ENDWHILE  shift, and go to state 90
    ID        shift, and go to state 19
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21

    idexpr  go to state 23
    stmt    go to state 35


State 89

   36 stmt: IF '(' expr ')' THEN slist ELSE . slist ENDIF ';'

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21

    slist   go to state 91
    idexpr  go to state 23
    stmt    go to state 24


State 90

   37 stmt: WHILE '(' expr ')' DO slist ENDWHILE . ';'

    ';'  shift, and go to state 92


State 91

   12 slist: slist . stmt
   36 stmt: IF '(' expr ')' THEN slist ELSE slist . ENDIF ';'

    IF     shift, and go to state 17
    ENDIF  shift, and go to state 93
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21

    idexpr  go to state 23
    stmt    go to state 35


State 92

   37 stmt: WHILE '(' expr ')' DO slist ENDWHILE ';' .

    $default  reduce using rule 37 (stmt)


State 93

   36 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF . ';'

    ';'  shift, and go to state 94


State 94

   36 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF ';' .

    $default  reduce using rule 36 (stmt)
